<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Avis__CLASSMETADATA__' => 0,
'App__Entity__Preference__CLASSMETADATA__' => 1,
'App__Entity__Reservation__CLASSMETADATA__' => 2,
'App__Entity__Trajet__CLASSMETADATA__' => 3,
'App__Entity__User__CLASSMETADATA__' => 4,
'App__Entity__Voiture__CLASSMETADATA__' => 5,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Avis',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AvisRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'commentaire' => $o[2],
                        'note' => $o[3],
                        'datePublication' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'commentaire' => 'commentaire',
                        'note' => 'note',
                        'date_publication' => 'datePublication',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'commentaire' => 'commentaire',
                        'note' => 'note',
                        'datePublication' => 'date_publication',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'avis',
                    ],
                ],
                'associationMappings' => [
                    [
                        'auteur' => $o[5],
                        'destinataire' => $o[7],
                        'trajet' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\Avis',
                    6 => 'auteur_id',
                    8 => 'destinataire_id',
                    10 => 'trajet_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'text',
                    'integer',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'commentaire',
                    'note',
                    'datePublication',
                ],
                'columnName' => [
                    1 => 'id',
                    'commentaire',
                    'note',
                    'date_publication',
                ],
                'fetch' => [
                    5 => 2,
                    7 => 2,
                    9 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Avis',
                    7 => 'App\\Entity\\Avis',
                    9 => 'App\\Entity\\Avis',
                ],
                'inversedBy' => [
                    5 => 'avisDonnes',
                    7 => 'avisRecus',
                    9 => 'avis',
                ],
                'sourceToTargetKeyColumns' => [
                    5 => [
                        'auteur_id' => 'id',
                    ],
                    7 => [
                        'destinataire_id' => 'id',
                    ],
                    9 => [
                        'trajet_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    5 => [
                        'id' => 'auteur_id',
                    ],
                    7 => [
                        'id' => 'destinataire_id',
                    ],
                    9 => [
                        'id' => 'trajet_id',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                    ],
                ],
                'joinColumnFieldNames' => [
                    5 => [
                        'auteur_id' => 'auteur_id',
                    ],
                    7 => [
                        'destinataire_id' => 'destinataire_id',
                    ],
                    9 => [
                        'trajet_id' => 'trajet_id',
                    ],
                ],
                'unique' => [
                    6 => false,
                    8 => false,
                    10 => false,
                ],
                'nullable' => [
                    6 => false,
                    8 => true,
                    10 => true,
                ],
                'referencedColumnName' => [
                    6 => 'id',
                    8 => 'id',
                    10 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'auteur',
                    7 => 'destinataire',
                    9 => 'trajet',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\User',
                    7 => 'App\\Entity\\User',
                    9 => 'App\\Entity\\Trajet',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Preference',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PreferenceRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'cle' => $o[2],
                        'valeur' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'cle' => 'cle',
                        'valeur' => 'valeur',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'cle' => 'cle',
                        'valeur' => 'valeur',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'preference',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Preference',
                    5 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'cle',
                    'valeur',
                ],
                'columnName' => [
                    1 => 'id',
                    'cle',
                    'valeur',
                ],
                'length' => [
                    2 => 100,
                    255,
                ],
                'fetch' => [
                    4 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Preference',
                ],
                'inversedBy' => [
                    4 => 'preferences',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                ],
                'nullable' => [
                    5 => false,
                ],
                'referencedColumnName' => [
                    5 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'user',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Reservation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ReservationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nbPlacesReservees' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nb_places_reservees' => 'nbPlacesReservees',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nbPlacesReservees' => 'nb_places_reservees',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reservation',
                    ],
                ],
                'associationMappings' => [
                    [
                        'passager' => $o[3],
                        'trajet' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Reservation',
                    4 => 'passager_id',
                    6 => 'trajet_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nbPlacesReservees',
                ],
                'columnName' => [
                    1 => 'id',
                    'nb_places_reservees',
                ],
                'fetch' => [
                    3 => 2,
                    5 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\Reservation',
                    5 => 'App\\Entity\\Reservation',
                ],
                'inversedBy' => [
                    3 => 'reservations',
                    5 => 'reservations',
                ],
                'sourceToTargetKeyColumns' => [
                    3 => [
                        'passager_id' => 'id',
                    ],
                    5 => [
                        'trajet_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    3 => [
                        'id' => 'passager_id',
                    ],
                    5 => [
                        'id' => 'trajet_id',
                    ],
                ],
                'joinColumns' => [
                    3 => [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    3 => [
                        'passager_id' => 'passager_id',
                    ],
                    5 => [
                        'trajet_id' => 'trajet_id',
                    ],
                ],
                'unique' => [
                    4 => false,
                    6 => false,
                ],
                'nullable' => [
                    4 => false,
                    6 => false,
                ],
                'referencedColumnName' => [
                    4 => 'id',
                    6 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'passager',
                    5 => 'trajet',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\User',
                    5 => 'App\\Entity\\Trajet',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Trajet',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TrajetRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'villeDepart' => $o[2],
                        'villeArrivee' => $o[3],
                        'dateDepart' => $o[4],
                        'nbPlaces' => $o[5],
                        'prix' => $o[6],
                        'ecologique' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'ville_depart' => 'villeDepart',
                        'ville_arrivee' => 'villeArrivee',
                        'date_depart' => 'dateDepart',
                        'nb_places' => 'nbPlaces',
                        'prix' => 'prix',
                        'ecologique' => 'ecologique',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'villeDepart' => 'ville_depart',
                        'villeArrivee' => 'ville_arrivee',
                        'dateDepart' => 'date_depart',
                        'nbPlaces' => 'nb_places',
                        'prix' => 'prix',
                        'ecologique' => 'ecologique',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'trajet',
                    ],
                ],
                'associationMappings' => [
                    [
                        'chauffeur' => $o[8],
                        'reservations' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\Trajet',
                    9 => 'chauffeur_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'datetime_immutable',
                    'integer',
                    'float',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'villeDepart',
                    'villeArrivee',
                    'dateDepart',
                    'nbPlaces',
                    'prix',
                    'ecologique',
                ],
                'columnName' => [
                    1 => 'id',
                    'ville_depart',
                    'ville_arrivee',
                    'date_depart',
                    'nb_places',
                    'prix',
                    'ecologique',
                ],
                'length' => [
                    2 => 255,
                    255,
                ],
                'fetch' => [
                    8 => 2,
                    10 => 2,
                ],
                'sourceEntity' => [
                    8 => 'App\\Entity\\Trajet',
                    10 => 'App\\Entity\\Trajet',
                ],
                'inversedBy' => [
                    8 => 'trajets',
                ],
                'sourceToTargetKeyColumns' => [
                    8 => [
                        'chauffeur_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    8 => [
                        'id' => 'chauffeur_id',
                    ],
                ],
                'joinColumns' => [
                    8 => [
                        $o[9],
                    ],
                ],
                'joinColumnFieldNames' => [
                    8 => [
                        'chauffeur_id' => 'chauffeur_id',
                    ],
                ],
                'unique' => [
                    9 => false,
                ],
                'nullable' => [
                    9 => false,
                ],
                'referencedColumnName' => [
                    9 => 'id',
                ],
                'cascade' => [
                    10 => [
                        'remove',
                    ],
                ],
                'orphanRemoval' => [
                    10 => true,
                ],
                'mappedBy' => [
                    10 => 'trajet',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    8 => 'chauffeur',
                    10 => 'reservations',
                ],
                'targetEntity' => [
                    8 => 'App\\Entity\\User',
                    10 => 'App\\Entity\\Reservation',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'prenom' => $o[3],
                        'email' => $o[4],
                        'pseudo' => $o[5],
                        'roles' => $o[6],
                        'password' => $o[7],
                        'credits' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'email' => 'email',
                        'pseudo' => 'pseudo',
                        'roles' => 'roles',
                        'password' => 'password',
                        'credits' => 'credits',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'email' => 'email',
                        'pseudo' => 'pseudo',
                        'roles' => 'roles',
                        'password' => 'password',
                        'credits' => 'credits',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'trajets' => $o[9],
                        'reservations' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'json',
                    'string',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'email',
                    'pseudo',
                    'roles',
                    'password',
                    'credits',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'email',
                    'pseudo',
                    'roles',
                    'password',
                    'credits',
                ],
                'length' => [
                    2 => 255,
                    255,
                    180,
                    255,
                    7 => 255,
                ],
                'unique' => [
                    4 => true,
                ],
                'cascade' => [
                    9 => [
                        'remove',
                    ],
                    [
                        'remove',
                    ],
                ],
                'fetch' => [
                    9 => 2,
                    2,
                ],
                'orphanRemoval' => [
                    9 => true,
                    true,
                ],
                'sourceEntity' => [
                    9 => 'App\\Entity\\User',
                    'App\\Entity\\User',
                ],
                'mappedBy' => [
                    9 => 'chauffeur',
                    'user',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    9 => 'trajets',
                    'reservations',
                ],
                'targetEntity' => [
                    9 => 'App\\Entity\\Trajet',
                    'App\\Entity\\Reservation',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Voiture',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\VoitureRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'marque' => $o[2],
                        'modele' => $o[3],
                        'immatriculation' => $o[4],
                        'places' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'marque' => 'marque',
                        'modele' => 'modele',
                        'immatriculation' => 'immatriculation',
                        'places' => 'places',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'marque' => 'marque',
                        'modele' => 'modele',
                        'immatriculation' => 'immatriculation',
                        'places' => 'places',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'voiture',
                    ],
                ],
                'associationMappings' => [
                    [
                        'proprietaire' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Voiture',
                    7 => 'proprietaire_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'marque',
                    'modele',
                    'immatriculation',
                    'places',
                ],
                'columnName' => [
                    1 => 'id',
                    'marque',
                    'modele',
                    'immatriculation',
                    'places',
                ],
                'length' => [
                    2 => 100,
                    100,
                    20,
                ],
                'fetch' => [
                    6 => 2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Voiture',
                ],
                'inversedBy' => [
                    6 => 'voitures',
                ],
                'sourceToTargetKeyColumns' => [
                    6 => [
                        'proprietaire_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    6 => [
                        'id' => 'proprietaire_id',
                    ],
                ],
                'joinColumns' => [
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    6 => [
                        'proprietaire_id' => 'proprietaire_id',
                    ],
                ],
                'unique' => [
                    7 => false,
                ],
                'nullable' => [
                    7 => false,
                ],
                'referencedColumnName' => [
                    7 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'proprietaire',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
