<?php

namespace ContainerHqPx3bZ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_LfCllMMService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.LfCllMM' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.LfCllMM'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\AuthController::signup' => ['privates', '.service_locator.lQAlGdR.App\\Controller\\AuthController::signup()', 'getAuthControllersignupService', true],
            'App\\Controller\\AuthController::checkEmail' => ['privates', '.service_locator.Kq27LHM.App\\Controller\\AuthController::checkEmail()', 'getAuthControllercheckEmailService', true],
            'App\\Controller\\ReservationController::index' => ['privates', '.service_locator.z.Yai9Y.App\\Controller\\ReservationController::index()', 'getReservationControllerindexService', true],
            'App\\Controller\\ReservationController::create' => ['privates', '.service_locator.lEKiwLz.App\\Controller\\ReservationController::create()', 'getReservationControllercreateService', true],
            'App\\Controller\\UserController::listUsers' => ['privates', '.service_locator.OzEre6h.App\\Controller\\UserController::listUsers()', 'getUserControllerlistUsersService', true],
            'App\\Controller\\UserController::checkEmail' => ['privates', '.service_locator.OzEre6h.App\\Controller\\UserController::checkEmail()', 'getUserControllercheckEmailService', true],
            'App\\Controller\\UserController::checkPseudo' => ['privates', '.service_locator.OzEre6h.App\\Controller\\UserController::checkPseudo()', 'getUserControllercheckPseudoService', true],
            'App\\Controller\\UserController::suspendUser' => ['privates', '.service_locator.OA38qqg.App\\Controller\\UserController::suspendUser()', 'getUserControllersuspendUserService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\AuthController:signup' => ['privates', '.service_locator.lQAlGdR.App\\Controller\\AuthController::signup()', 'getAuthControllersignupService', true],
            'App\\Controller\\AuthController:checkEmail' => ['privates', '.service_locator.Kq27LHM.App\\Controller\\AuthController::checkEmail()', 'getAuthControllercheckEmailService', true],
            'App\\Controller\\ReservationController:index' => ['privates', '.service_locator.z.Yai9Y.App\\Controller\\ReservationController::index()', 'getReservationControllerindexService', true],
            'App\\Controller\\ReservationController:create' => ['privates', '.service_locator.lEKiwLz.App\\Controller\\ReservationController::create()', 'getReservationControllercreateService', true],
            'App\\Controller\\UserController:listUsers' => ['privates', '.service_locator.OzEre6h.App\\Controller\\UserController::listUsers()', 'getUserControllerlistUsersService', true],
            'App\\Controller\\UserController:checkEmail' => ['privates', '.service_locator.OzEre6h.App\\Controller\\UserController::checkEmail()', 'getUserControllercheckEmailService', true],
            'App\\Controller\\UserController:checkPseudo' => ['privates', '.service_locator.OzEre6h.App\\Controller\\UserController::checkPseudo()', 'getUserControllercheckPseudoService', true],
            'App\\Controller\\UserController:suspendUser' => ['privates', '.service_locator.OA38qqg.App\\Controller\\UserController::suspendUser()', 'getUserControllersuspendUserService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\AuthController::signup' => '?',
            'App\\Controller\\AuthController::checkEmail' => '?',
            'App\\Controller\\ReservationController::index' => '?',
            'App\\Controller\\ReservationController::create' => '?',
            'App\\Controller\\UserController::listUsers' => '?',
            'App\\Controller\\UserController::checkEmail' => '?',
            'App\\Controller\\UserController::checkPseudo' => '?',
            'App\\Controller\\UserController::suspendUser' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\AuthController:signup' => '?',
            'App\\Controller\\AuthController:checkEmail' => '?',
            'App\\Controller\\ReservationController:index' => '?',
            'App\\Controller\\ReservationController:create' => '?',
            'App\\Controller\\UserController:listUsers' => '?',
            'App\\Controller\\UserController:checkEmail' => '?',
            'App\\Controller\\UserController:checkPseudo' => '?',
            'App\\Controller\\UserController:suspendUser' => '?',
        ]);
    }
}
